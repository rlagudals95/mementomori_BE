variables:
  APP_NAME: ohzig-be
  PACKAGE_NAME: $APP_NAME
  REPOSITORY: $REGISTRY/$PACKAGE_NAME
  TAG: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
  DOCKER_HOST: tcp://docker:2375
  CD_CHART_REPO: app-manifests
  CD_GIT_REPOSITORY: https://$GIT_USER_NAME:$GIT_USER_PASSWORD@gitlab.com/team_babel/$CD_CHART_REPO.git
  CD_MANIFEST_FILE: values.yaml

stages:
  - build
  - test
  - package
  - deploy

build_app:
  stage: build
  image: node:18-alpine
  script:
    - echo "Build.."
    - npm install
    - npm run build

test_app:
  stage: test
  image: node:18-alpine
  script:
    - echo "Test.."
    - npm install
    - npm run test

docker-build:
  stage: package
  only:
    - develop
    - main
  image:
    name: spy1233/awscli-docker:alpine2.8.4
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - DOCKERFILE_POSTFIX=$(if [ $CI_COMMIT_REF_NAME != 'main' ]; then echo '.dev'; fi)
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REGISTRY
    - BRANCH_NAME=$(basename $CI_COMMIT_REF_NAME)
    - TAG=$BRANCH_NAME-$CI_COMMIT_SHORT_SHA
  script:
    - docker build -t $REPOSITORY:$TAG . -f Dockerfile$DOCKERFILE_POSTFIX
    - docker push $REPOSITORY:$TAG

update-manifest-dev:
  stage: deploy
  only:
    - develop
  image: alpine:3.16.2
  before_script:
    - apk add --no-cache git yq
    - git config --global user.name $APP_NAME
    - git config --global user.email $GIT_USER_EMAIL
    - git clone --single-branch --branch main $CD_GIT_REPOSITORY
    - BRANCH_NAME=$(basename $CI_COMMIT_REF_NAME)
    - TAG=$BRANCH_NAME-$CI_COMMIT_SHORT_SHA
    - cd $CD_CHART_REPO/$PACKAGE_NAME
  script:
    - yq e -i -v '.image.tag = strenv(TAG)' "dev.$CD_MANIFEST_FILE"
    - cat "dev.$CD_MANIFEST_FILE"
    - git commit -am "Update image tag" && git push origin main

update-manifest-prod:
  stage: deploy
  only:
    - main
  image: alpine:3.16.2
  when: manual
  before_script:
    - apk add --no-cache git yq
    - git config --global user.name $APP_NAME
    - git config --global user.email $GIT_USER_EMAIL
    - git clone --single-branch --branch main $CD_GIT_REPOSITORY
    - cd $CD_CHART_REPO/$PACKAGE_NAME
  script:
    - yq e -i -v '.image.tag = strenv(TAG)' "prod.$CD_MANIFEST_FILE"
    - cat "prod.$CD_MANIFEST_FILE"
    - git commit -am "Update image tag" && git push origin main
